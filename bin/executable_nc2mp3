#!/usr/bin/env node
const fs = require('fs/promises');
const path = require('path');
// const { song_detail } = require('NeteaseCloudMusicApi');

const BAZINGA = 0xa3;
const BLOCK_SIZE = 256 * 1024;
const CACHE_EXT = '.uc!';
const OUTPUT_EXT = '.mp3';

function decode(buffer) {
  for (let i = 0; i < buffer.length; ++i) {
    buffer[i] ^= BAZINGA;
  }
}

async function decodeFile(target) {
  // const targetPath = path.resolve(module.parent.path, target);
  const targetPath = target;
  const stat = await fs.stat(targetPath);
  const buffer = Buffer.alloc(stat.size);

  const reader = await fs.open(targetPath, 'r');
  for (let offset = 0; offset < stat.size; offset += BLOCK_SIZE) {
    const length =
      offset + BLOCK_SIZE > stat.size ? stat.size - offset : BLOCK_SIZE;
    await reader.read(buffer, offset, length);
  }
  await reader.close();

  decode(buffer);

  const originName = path.basename(targetPath, CACHE_EXT);
  let outputName = originName;
  const musicInfo = await decodeInfo(originName);
  if (musicInfo && musicInfo.songs.length) {
    const song = musicInfo.songs[0];
    outputName = `${song.ar.map((artist) => artist.name).join(',')} - ${
      song.name
    }`;
  }
  const outputPath = outputName + OUTPUT_EXT;
  const writer = await fs.open(outputPath, 'w');
  await writer.write(buffer, 0, stat.size);
  await writer.close();
  console.log(`saved to ${outputPath}`);
}

async function decodeInfo(filename) {
  try {
    const rsp = await fetch(
      `https://nc.home.lubui.com:8443/song/detail?ids=${
        path.basename(filename).split('-')[0]
      }`
    );
    return await rsp.json();
  } catch (error) {
    console.log(error);
  }
}

async function main() {
  if (process.argv[2] === '--info') {
    const info = await decodeInfo(process.argv[3]);
    console.log(JSON.stringify(info, null, 2));
  } else {
    process.argv.slice(2).forEach((arg) => decodeFile(arg));
  }
}

main();